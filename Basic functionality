import discord
import os
import requests
import json
import flask
import keep_alive

client = discord.Client()
server_home = "Frostmourne"
region_home = "us"

 
def get_completed(character, server, region):
  response = requests.get(url="https://raider.io/api/v1/characters/profile?region=" + region + "&realm=" + server + "&name=" + character + "&fields=mythic_plus_weekly_highest_level_runs", params= dict())
  json_data = json.loads(response.text)
  
  completed = json_data["name"] + "-" + json_data["realm"]
  
  for x in json_data["mythic_plus_weekly_highest_level_runs"]:
    completed += "\n" + x["dungeon"] + " " + str(x["mythic_level"]) + " (+" + str(x["num_keystone_upgrades"]) + ")"
 
  return(completed)
 
 
#print(get_completed("L%C3%BAnacy", "Frostmourne", "us"))
#print(get_completed("Twintop", "Frostmourne", "us"))
 
@client.event
async def on_ready():
  print('We have logged in as {0.user}'.format(client))
 
@client.event 
async def on_message(message):
  has_entry_error = True
  if message.author == client.user:
    return

  if message.content.startswith('*weekly'):
    message_parts = message.content.split(" ")

    if len(message_parts) >= 1:
      character = ""
      server = ""
      region = ""
      region_raw = ""

      if "-" in message_parts[1]:
        character_server = message_parts[1].split("-")
        
        if len(character_server) == 2:
          character = character_server[0]
          server = character_server[1]
          has_entry_error = False

          if len(message_parts) > 2:
            region_raw = message_parts[2]
      else:
        if len(message_parts) > 1:
          character = message_parts[1]
          has_entry_error = False

          if len(message_parts) > 2:
            server = message_parts[2]

            if len(message_parts) > 3:
              region_raw = message_parts[2]
          else:
            server = "Frostmourne"
      
      if region_raw != "":
        if region_raw.lower() == "us" or region_raw.lower() == "eu" or region_raw.lower() == "kr" or region_raw.lower() == "tw" or region_raw.lower() == "cn":
          region = region_raw.lower()
        else:
          region = "us"
      else:
        region = "us"

      completed = get_completed(character, server, region)      
    
    if has_entry_error:
      completed = "Invalid format. Please use the following format: *weekly [CharacterName]-[Realm] [US/EU/KR/TW/CN]"

    await message.channel.send(completed)

keep_alive.keep_alive()    
 
client.run(os.environ['token'])


